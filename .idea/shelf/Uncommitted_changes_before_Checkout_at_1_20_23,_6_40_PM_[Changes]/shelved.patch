Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"dc23c879-ab3b-4e59-81a5-d92d8eb9deef\" name=\"Changes\" comment=\"\" />\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"ProjectId\" id=\"2KV0SBajbp2Kj4bKrfAmgbTaiqX\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n    <option name=\"showVisibilityIcons\" value=\"true\" />\n    <option name=\"sortByType\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">{\n  &quot;keyToString&quot;: {\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;\n  }\n}</component>\n  <component name=\"RunManager\">\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.brevitaz.Theatre.Main\" />\n      <module name=\"TheatreProject\" />\n      <extension name=\"coverage\">\n        <pattern>\n          <option name=\"PATTERN\" value=\"com.brevitaz.Theatre.*\" />\n          <option name=\"ENABLED\" value=\"true\" />\n        </pattern>\n      </extension>\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <recent_temporary>\n      <list>\n        <item itemvalue=\"Application.Main\" />\n      </list>\n    </recent_temporary>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"dc23c879-ab3b-4e59-81a5-d92d8eb9deef\" name=\"Changes\" comment=\"\" />\n      <created>1674044443006</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1674044443006</updated>\n    </task>\n    <servers />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	
+++ b/.idea/workspace.xml	
@@ -4,13 +4,24 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="dc23c879-ab3b-4e59-81a5-d92d8eb9deef" name="Changes" comment="" />
+    <list default="true" id="dc23c879-ab3b-4e59-81a5-d92d8eb9deef" name="Changes" comment="theatre 1.2: changed after used sonarlint plugin">
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/com/brevitaz/Theatre/BookSeat.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/com/brevitaz/theatreproject/BookSeat.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/com/brevitaz/Theatre/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/com/brevitaz/theatreproject/Main.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/com/brevitaz/Theatre/Statistics.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/com/brevitaz/theatreproject/Statistics.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/com/brevitaz/Theatre/TheatreManagement.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/com/brevitaz/theatreproject/TheatreManagement.java" afterDir="false" />
+    </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
     <option name="LAST_RESOLUTION" value="IGNORE" />
   </component>
   <component name="Git.Settings">
+    <option name="RECENT_BRANCH_BY_REPOSITORY">
+      <map>
+        <entry key="$PROJECT_DIR$" value="stage5" />
+      </map>
+    </option>
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
   </component>
   <component name="ProjectId" id="2KV0SBajbp2Kj4bKrfAmgbTaiqX" />
@@ -21,19 +32,20 @@
     <option name="showVisibilityIcons" value="true" />
     <option name="sortByType" value="true" />
   </component>
-  <component name="PropertiesComponent">{
-  &quot;keyToString&quot;: {
-    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
-    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;
+  <component name="PropertiesComponent"><![CDATA[{
+  "keyToString": {
+    "RunOnceActivity.OpenProjectViewOnStart": "true",
+    "RunOnceActivity.ShowReadmeOnStart": "true",
+    "SONARLINT_PRECOMMIT_ANALYSIS": "true"
   }
-}</component>
+}]]></component>
   <component name="RunManager">
     <configuration name="Main" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
-      <option name="MAIN_CLASS_NAME" value="com.brevitaz.Theatre.Main" />
+      <option name="MAIN_CLASS_NAME" value="com.brevitaz.theatreproject.Main" />
       <module name="TheatreProject" />
       <extension name="coverage">
         <pattern>
-          <option name="PATTERN" value="com.brevitaz.Theatre.*" />
+          <option name="PATTERN" value="com.brevitaz.theatreproject.*" />
           <option name="ENABLED" value="true" />
         </pattern>
       </extension>
@@ -44,6 +56,7 @@
     <recent_temporary>
       <list>
         <item itemvalue="Application.Main" />
+        <item itemvalue="Application.Main" />
       </list>
     </recent_temporary>
   </component>
@@ -69,4 +82,8 @@
       </map>
     </option>
   </component>
+  <component name="VcsManagerConfiguration">
+    <MESSAGE value="theatre 1.2: changed after used sonarlint plugin" />
+    <option name="LAST_COMMIT_MESSAGE" value="theatre 1.2: changed after used sonarlint plugin" />
+  </component>
 </project>
\ No newline at end of file
Index: src/com/brevitaz/Theatre/TheatreManagement.java
===================================================================
diff --git a/src/com/brevitaz/Theatre/TheatreManagement.java b/src/com/brevitaz/theatreproject/TheatreManagement.java
rename from src/com/brevitaz/Theatre/TheatreManagement.java
rename to src/com/brevitaz/theatreproject/TheatreManagement.java
--- a/src/com/brevitaz/Theatre/TheatreManagement.java	
+++ b/src/com/brevitaz/theatreproject/TheatreManagement.java	
@@ -1,17 +1,21 @@
-package com.brevitaz.Theatre;
+package com.brevitaz.theatreproject;
 
 import java.util.InputMismatchException;
 import java.util.Scanner;
 public class TheatreManagement {
 	private char[][] room;
-	private int rowSize,colmSize,row,colm;
+	private int rowSize;
+	private int colmSize;
+	private int row;
+	private int colm;
 	public char[][] getRoom() {
 		return room;
 	}
+	static final Scanner scanner = new Scanner(System.in);
+
 
 	//initRoom() will create cinema hall according the user input
 	public void initRoom() {
-		Scanner scanner=new Scanner(System.in);
 		try{
 			System.out.println("Enter the number of rows:");
 			rowSize=scanner.nextInt();
Index: src/com/brevitaz/Theatre/BookSeat.java
===================================================================
diff --git a/src/com/brevitaz/Theatre/BookSeat.java b/src/com/brevitaz/theatreproject/BookSeat.java
rename from src/com/brevitaz/Theatre/BookSeat.java
rename to src/com/brevitaz/theatreproject/BookSeat.java
--- a/src/com/brevitaz/Theatre/BookSeat.java	
+++ b/src/com/brevitaz/theatreproject/BookSeat.java	
@@ -1,4 +1,4 @@
-package com.brevitaz.Theatre;
+package com.brevitaz.theatreproject;
 
 import java.util.InputMismatchException;
 import java.util.Scanner;
@@ -12,7 +12,11 @@
 	// according the chosen seat will show ticket price
 	public void getBooked(char[][] seats)
 	{
-		int totalRoomSeats,firstHalfRow,priceLS60=10,priceGT60FirstHalf=10,priceGT60SecondHalf=8;
+		int totalRoomSeats;
+		int firstHalfRow;
+		int priceLS60=10;
+		int priceGT60FirstHalf=10;
+		int priceGT60SecondHalf=8;
 		Scanner scan = new Scanner(System.in);
 		try{
 
Index: src/com/brevitaz/Theatre/Main.java
===================================================================
diff --git a/src/com/brevitaz/Theatre/Main.java b/src/com/brevitaz/theatreproject/Main.java
rename from src/com/brevitaz/Theatre/Main.java
rename to src/com/brevitaz/theatreproject/Main.java
--- a/src/com/brevitaz/Theatre/Main.java	
+++ b/src/com/brevitaz/theatreproject/Main.java	
@@ -1,7 +1,7 @@
-package com.brevitaz.Theatre;
+package com.brevitaz.theatreproject;
 
 import java.util.InputMismatchException;
-import java.util.Scanner;
+
 
 public class Main {
     int choice=0;
@@ -11,22 +11,20 @@
 
     //menu() will allow you to take choice and get output according...
     public void menu() {
-        Scanner scanner = new Scanner(System.in);
         if(isFirstCall){
             theatre.initRoom();
         }
 
-        while(true){
+        do{
             try{
                 System.out.println("1. Show the seats");
                 System.out.println("2. Buy a ticket");
                 System.out.println("3. Statistic");
                 System.out.println("0. Exit");
                 System.out.println("Enter Choice:");
-                choice= scanner.nextInt();
+                choice= TheatreManagement.scanner.nextInt();
 
                 switch (choice) {
-
                     case 1:
                         theatre.dispRoom();
                         break;
@@ -38,7 +36,7 @@
                         stat.getStatisticDetails(theatre.getRoom());
                         break;
                     case 0:
-                        System.exit(0);
+                        break ;
                     default:
                         System.out.println("Invalid choice:");
                 }
@@ -46,11 +44,11 @@
             catch (InputMismatchException i){
                 System.err.println("Something Went Wrong!");
                 isFirstCall=false;
-                scanner.reset();
+                TheatreManagement.scanner.reset();
                 menu();
             }
 
-        }
+        }while(choice!=0);
 
     }
 
Index: src/com/brevitaz/Theatre/Statistics.java
===================================================================
diff --git a/src/com/brevitaz/Theatre/Statistics.java b/src/com/brevitaz/theatreproject/Statistics.java
rename from src/com/brevitaz/Theatre/Statistics.java
rename to src/com/brevitaz/theatreproject/Statistics.java
--- a/src/com/brevitaz/Theatre/Statistics.java	
+++ b/src/com/brevitaz/theatreproject/Statistics.java	
@@ -1,4 +1,4 @@
-package com.brevitaz.Theatre;
+package com.brevitaz.theatreproject;
 
 
 public class Statistics {
@@ -9,18 +9,17 @@
 	private int currentIncome;
 	private int numOfTickets;
 	private int totalRoomSeats;
-	private  float percentage;
+	private float percentage;
 
 	//getStatisticDetails(char[][] seats) will call the all separates functions which performs separate activity's
 	// ex: count number of purchased tickets,percentage,income
 
-	public void getStatisticDetails(char[][] seats)
-	{
-		tempSeats=seats;
-		rowCount=seats.length;
-		colmCount= seats[0].length;
-		firstHalfRow=rowCount/2;
-		totalRoomSeats=rowCount*colmCount;
+	public void getStatisticDetails(char[][] seats) {
+		tempSeats = seats;
+		rowCount = seats.length;
+		colmCount = seats[0].length;
+		firstHalfRow = rowCount / 2;
+		totalRoomSeats = rowCount * colmCount;
 
 		getNumOfSoldTickets();
 		getCurrentIncome();
@@ -28,32 +27,31 @@
 	}
 
 	//getTotalIncome() will count the total income of the particular created hall
-	public void getTotalIncome()
-	{
+	public void getTotalIncome() {
 		int totalIncome;
 		if (totalRoomSeats > 0 && totalRoomSeats < 60) {
-				totalIncome = rowCount * (colmCount * 10);
-			} else {
-				firstHalfRow = rowCount / 2;
+			totalIncome = rowCount * (colmCount * 10);
+		} else {
+			firstHalfRow = rowCount / 2;
 			int secondHalfRow = rowCount - firstHalfRow;
 			int firstHalfCount = firstHalfRow * (colmCount * 10);
 			int secondHalfCount = secondHalfRow * (colmCount * 8);
-				totalIncome = firstHalfCount + secondHalfCount;
-			}
+			totalIncome = firstHalfCount + secondHalfCount;
+		}
 
-		System.out.println("Total Income: $" + totalIncome +"\n");
+		System.out.println("Total Income: $" + totalIncome + "\n");
 	}
 
 	//getNumOfSoldTickets() will count the total booked seats and booked seat's average
-	public void getNumOfSoldTickets(){
-		for (int row=0;row<rowCount;row++) {
-			for (int colm=0;colm<colmCount;colm++) {
-				if(tempSeats[row][colm]=='B'){
+	public void getNumOfSoldTickets() {
+		for (int row = 0; row < rowCount; row++) {
+			for (int colm = 0; colm < colmCount; colm++) {
+				if (tempSeats[row][colm] == 'B') {
 					numOfTickets++;
 				}
 			}
 		}
-		percentage=((float)numOfTickets*100)/totalRoomSeats;
+		percentage = ((float) numOfTickets * 100) / totalRoomSeats;
 
 		System.out.println("Number of purchased tickets $" + numOfTickets);
 		System.out.printf("Percentage :%.2f", percentage);
@@ -62,22 +60,22 @@
 	}
 
 	//getCurrentIncome() will count the total earned income after booked seats
-	public void getCurrentIncome(){
+	public void getCurrentIncome() {
 		int priceLS60 = 10;
 		int priceGT60FirstHalf = 10;
 		int priceGT60SecondHalf = 8;
-		for (int row=0;row<rowCount;row++) {
-			for (int colm=0;colm<colmCount;colm++) {
-				if(tempSeats[row][colm]=='B'){
+		for (int row = 0; row < rowCount; row++) {
+			for (int colm = 0; colm < colmCount; colm++) {
+				if (tempSeats[row][colm] == 'B') {
 					if (totalRoomSeats > 0 && totalRoomSeats < 60) {
-						currentIncome+= priceLS60;
+						currentIncome += priceLS60;
 					} else {
 						currentIncome += (row <= firstHalfRow) ? priceGT60FirstHalf : priceGT60SecondHalf;
 					}
 				}
 			}
 		}
-		percentage=((float)numOfTickets*100)/totalRoomSeats;
+		percentage = ((float) numOfTickets * 100) / totalRoomSeats;
 		System.out.println("Current Income: $" + currentIncome);
 
 	}
